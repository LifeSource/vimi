# React Snippets

# Imports
snippet impr
	import React from 'react'
snippet impl
	import {Link} from 'react-router'
snippet impt
	import {PropTypes} from 'react'

# Rendering
snippet rrender
	React.render(<${1} />, ${2})${0}
snippet rr
	render(${1}, document.getElementById("${2}"))${0}
# Component creation
snippet rcomp5
	var React = require("react")

	var ${1:} = React.createClass({
		render: function () {
			return (
				${0}
			)
		}
	})

	module.exports = $1
# Stateful component
snippet rcomp
	import React, {PropTypes} from "react"

	class ${1:} extends React.Component {
		constructor(props) {
			super(props)
		}

		render() {
			return (
				${0}
			)
		}
	}

	$1.propTypes = {
		
	}

	export default $1
# Stateless Component
snippet scomp
	import React, { PropTypes } from 'react'

	const ${1:} = (${2}) => (
		${0}
	)

	$1.propTypes = {
		
	}

	export default $1
# Redux container component
snippet xcomp
	import React, { PropTypes } from 'react'
	import { connect } from 'react-redux'

	const ${1:} = (${2}) => (
		${0}
	)

	$1.propTypes = {
		
	}

	const mapStateToProps = (state, ownProps) => {

	}

	const mapDispatchToProps(dispatch) => {
		return {

		}
	}

	export default connect(
		mapStateToProps,
		mapDispatchToProps
	)(${1})

snippet pt
	React.PropTypes.${1}

snippet rpt
	static propTypes = { ${1} }${0}

snippet dpt
	static defaultProps = { ${1} }${0}

# return
snippet rt
	return (
		${0}
	)
# Redux
snippet rdxcomp 
	import React, { PropTypes } from 'react'
	import { connect } from 'react-redux'
	import { bindActionCreators } from 'redux'

	class ${1:} extends React.Component {
		constructor(props, context) {
			super(props, context)
		}

		render() {
			return (
				<div>
					${0}
				</div>
			)
		}
	}

	$1.propTypes = {

	}

	function mapStateToProps(state, ownProps) {
		// ownProps
	}

	function mapDispatchToProps(dispatch) {
		return {
			actions: bindActionCreators(actions, dispatch)
		}
	}

	export default connect(mapStateToProps, mapDispatchToProps)($1)
